q()
load("C:\\Users\\FMV\\Google Drive\\software\\R\\project\\p32\\.RData")
#条件に合ったデータを表示
body.data[body.data$height,]
sd(body.data)
sd(body.data$height)
#ヒストグラムの表示
ggplot(body.data,aes(x=height))+
geom_histogram()+
theme_bw()+
ylab("coun"t)
#ヒストグラムの表示
ggplot(body.data,aes(x=height))+
geom_histogram()+
theme_bw(16)+
ylab("coun"t)
library(ggplot)
library(ggplot2)
ggplot(body.data,aes(x=height))+
geom_histogram()+
theme_bw(16)+
ylab("coun"t)
ggplot(body.data,aes(x=height))+
geom_histogram()+
theme_bw(16)+
ylab("coun"t)
ggplot(body.data,aes(x=height))+geom_histogram()+theme_bw(16)+ylab("coun"t)
ggplot(body.data,aes(x=height,y=weight))+geom_point()+theme_bw(16)+geom_smooth(method="Im")
head(body.data)
#ヒストグラムの表示
ggplot(body.data,aes(x=height,y=weight))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
ggplot(body.data,aes(x=height,y=id))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
ggplot(body.data,aes(x=height,y=weight))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
ggplot(body.data,aes(x=height,y=weight))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
geom_smooth(method="Im")
body.data[body.data$weight=NA]
body.data[body.data$weight==NA]
body.data[body.data$weight==""]
is.na(body.data$weight)
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
plot(body.data)
is.na(body.data)
# データと全体設定を持ったggplotオブジェクトを作る
gp = ggplot(body.data,aes(x=height,y=weight,col=gender)
# グラフのレイヤーを重ねる
gp = gp + geom_point()
# 描画してみる
print(gp)
# データと全体設定を持ったggplotオブジェクトを作る
gp = ggplot(body.data,aes(x=height,y=weight,col=gender)
# グラフのレイヤーを重ねる
gp = gp + geom_point(size=3, alpha=0.7)
# 描画してみる
print(gp)
# ライブラリの読み込み
library(ggplot2)
# データと全体設定を持ったggplotオブジェクトを作る
gp = ggplot(body.data,aes(x=height,y=weight,col=gender)
# グラフのレイヤーを重ねる
gp = gp + geom_point(size=3, alpha=0.7)
# 描画してみる
print(gp)
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender)
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender)+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender)+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender)+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
#geom_smooth(method="Im")
#geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
#geom_smooth(method="Im")
afafa
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
#geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im",family=poisson,,se=FALSE)
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im",family=poisson,,se=FALSE)
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im",family=poisson,se=FALSE)
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method=glm)
q()
q()
 data.0 <- read.csv("data0.csv")
 lm.model.0 <- lm(length ~ food + medicine, data = data.0)
 lm.model.0
# より詳しい結果の表示
 # ここに t value と t 検定の結果が出ている。
 summary(lm.model.0)
 # サンプルデータの作成
 d <- c(-1, -1, 0, 0, 1, 3, 5, 6, 7, 7)
 #平均値
 mean(d)
 #標準偏差
 sd(d)
 #ｔ検定
 mean <- mean(d)
 std.error <- sd(d) / sqrt(length(d))
 t.value <- mean / std.error
 t.value
 (1-pt(t.value, df=length(d)-1))*2
 # R に入っている関数を使う
 t.test(d)
# グラフを描くだけ
 # サンプルデータの作成
 d2 <- data.frame(
 Y = c(c(1,2,3,4,5), c(4,5,6,7,8), c(7,8,9,10,11)),
 option = rep(c("A", "B", "C"), each=5)
 )
d2
 d2 <- data.frame(
 Y = c(c(1,2,3,4,5), c(4,5,6,7,8), c(7,8,9,10,11)),
 option = rep(c("A", "B", "C"), each=4)
 )
 d2
 # サンプルデータの作成
 d2 <- data.frame(
 Y = c(c(1,2,3,4,5), c(4,5,6,7,8), c(7,8,9,10,11)),
 option = rep(c("A", "B", "C"), each=5)
 )
 d2
 # データの可視化
 plot(d2$Y ~ d2$option)
 # データの可視化
 plot(d2$Y ~ d2$option)
 # スライドに載せたような散布図形式のグラフを作る
 par(mar=c(5, 6, 3, 3))
 plot.default(
 d2$Y ~ d2$option, 
 ylim=c(0,12), xlim=c(0.5,3.5),
 ylab="結果", xlab="選択肢",
 cex=2,
 cex.lab=2, cex.main=3,
 xaxt="n")
 axis(side=1, 1:3, LETTERS[1:3])
 # サンプルデータの作成
 d <- c(-1, -1, 0, 0, 1, 3, 5, 6, 7, 7)
 #平均値
 mean(d)
 #標準偏差
 sd(d)
 #サンプルサイズ
 length(d)
 #標準誤差
 sd(d)/sqrt(length(d))
 #ｔ検定
 mean <- mean(d)
 std.error <- sd(d) / sqrt(length(d))
 t.value <- mean / std.error
 t.value
 (1-pt(t.value, df=length(d)-1))*2
 # R に入っている関数を使う
 t.test(d)
#平均値
 mean(d)
# サンプルデータの作成
 d2 <- data.frame(
 Y = c(c(1,2,3,4,5), c(4,5,6,7,8), c(7,8,9,10,11)),372 option = rep(c("A", "B", "C"), each=5)
 )
 d2
# データの可視化
 plot(d2$Y ~ d2$option)
 # Y の総平均
 mean(d2$Y)
 # option ごとの Y の期待値の算出
 tapply(d2$Y, d2$option, mean)
# R で分散分析を実装する
 lm.model.anova <- lm(Y ~ option, data=d2)
 # 係数の確認
 lm.model.anova
 summary(lm.model.anova)
 # option ごとの Y の期待値の算出
 tapply(d2$Y, d2$option, mean)
q()
