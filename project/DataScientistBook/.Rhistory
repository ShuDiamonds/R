q()
load("C:\\Users\\FMV\\Google Drive\\software\\R\\project\\p32\\.RData")
#条件に合ったデータを表示
body.data[body.data$height,]
sd(body.data)
sd(body.data$height)
#ヒストグラムの表示
ggplot(body.data,aes(x=height))+
geom_histogram()+
theme_bw()+
ylab("coun"t)
#ヒストグラムの表示
ggplot(body.data,aes(x=height))+
geom_histogram()+
theme_bw(16)+
ylab("coun"t)
library(ggplot)
library(ggplot2)
ggplot(body.data,aes(x=height))+
geom_histogram()+
theme_bw(16)+
ylab("coun"t)
ggplot(body.data,aes(x=height))+
geom_histogram()+
theme_bw(16)+
ylab("coun"t)
ggplot(body.data,aes(x=height))+geom_histogram()+theme_bw(16)+ylab("coun"t)
ggplot(body.data,aes(x=height,y=weight))+geom_point()+theme_bw(16)+geom_smooth(method="Im")
head(body.data)
#ヒストグラムの表示
ggplot(body.data,aes(x=height,y=weight))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
ggplot(body.data,aes(x=height,y=id))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
ggplot(body.data,aes(x=height,y=weight))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
ggplot(body.data,aes(x=height,y=weight))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
geom_smooth(method="Im")
body.data[body.data$weight=NA]
body.data[body.data$weight==NA]
body.data[body.data$weight==""]
is.na(body.data$weight)
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
plot(body.data)
is.na(body.data)
# データと全体設定を持ったggplotオブジェクトを作る
gp = ggplot(body.data,aes(x=height,y=weight,col=gender)
# グラフのレイヤーを重ねる
gp = gp + geom_point()
# 描画してみる
print(gp)
# データと全体設定を持ったggplotオブジェクトを作る
gp = ggplot(body.data,aes(x=height,y=weight,col=gender)
# グラフのレイヤーを重ねる
gp = gp + geom_point(size=3, alpha=0.7)
# 描画してみる
print(gp)
# ライブラリの読み込み
library(ggplot2)
# データと全体設定を持ったggplotオブジェクトを作る
gp = ggplot(body.data,aes(x=height,y=weight,col=gender)
# グラフのレイヤーを重ねる
gp = gp + geom_point(size=3, alpha=0.7)
# 描画してみる
print(gp)
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender)
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender)+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender)+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender)+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
#geom_smooth(method="Im")
#geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
#geom_smooth(method="Im")
afafa
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
#geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im")
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im",family=poisson,,se=FALSE)
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im",family=poisson,,se=FALSE)
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method="Im",family=poisson,se=FALSE)
# データと全体設定を持ったggplotオブジェクトを作る
ggplot(body.data,aes(x=height,y=weight,col=gender))+
geom_point()+
theme_bw(16)+
geom_smooth(method=glm)
q()
q()
q()
save.image("C:\\Users\\FMV\\Google Drive\\software\\R\\project\\データサイエンティスト養成読本\\.RData")
amount.1<-read,csv("amount1.csv")
amount.1<-read.csv("amount1.csv")
head(amount.1)
summary(amount.1)
#散布図の作成
ggplot(amount.1,aes(x=invest,y=amount)) +
geom_lpoint() +
theme_bw(16)
lirary(ggplot)
library(ggplot)
library(ggplot2)
#散布図の作成
ggplot(amount.1,aes(x=invest,y=amount)) +
geom_lpoint() +
theme_bw(16)
#散布図の作成
ggplot(amount.1,aes(x=invest,y=amount)) +
geom_point() +
theme_bw(16)
amount1.lm1 <- lm(amount~invest, data=amount.1)
summary(amount1.lm1)
plot(amount1.lm1)
plot(amount1.lm1,which=1)
plot(amount1.lm1,which=1)
plot(amount1.lm1,which=1)
#逓減型回帰モデルの描画
ggplot(amount.1,aes(x=invest,y=amount)) +
geom_point() +
theme_bw(16) +
geom_smooth(method="lm",formula=y~log(x))
#逓減回帰モデルの作成
amount1.lm2 <- lm(amount~log(invest), data=amount.1)
summary(amount1.lm1)
plot(amount1.lm2,which=1)#逓減回帰モデルの作成
amount1.lm2 <- lm(amount~log(invest), data=amount.1)
summary(amount1.lm1)
plot(amount1.lm2,which=1)
summary(amount1.lm2)
z <- data.frame(Titanic)
save.image("C:\\Users\\FMV\\Google Drive\\software\\R\\project\\データサイエンティスト養成読本\\.RData")
#データの整理
z <- data.frame(Titanic)
titanic.data <- data.frame(
Class=rep(z$Class,z$Freq),
sex=rep(z$Sex,z$Freq),
Age=rep(z$Age,z$Freq),
Survived=rep(z$Survived,z$Freq)
)
titanic.logit <- glm(Survived-.,data=titanic.data, family=binomial)
titanic.logit <- glm(Survived~.,data=titanic.data, family=binomial)
sumarry(titanic.logit)
sumarry(titanic.logit)
sumary(titanic.logit)
summary(amount1.lm2)
summary(titanic.logit)
liburary(epicalc)
library(epicalc)
install(epicalc)
install.packagese("epicalc")
install.packages("epicalc")
library(epicalc)
logistic.display(titanic.logi,simplified=T)
logistic.display(titanic.logit,simplified=T)
plot(titanic.logit,which=1)
plot(titanic.logit,which=2)
plot(titanic.logit)
install.packages("epicalc")
#曲線の表示
x<-1:length(9z$Survived)
x1<-z$Class2nd
x2<-z$Class3rd
x3<-z$ClassCrew
x4<-z$sexFemale
x5<-z$AgeAdult
x<-1:length(z$Survived)
#曲線の作成
y<- 0.6853-1.0181*x1-1.7778*x2-0.8577*x3+2.4201*x4-1.0615*x5
plot(x,z$Survived, type="l")
par( new=T )
plot( x, y, type="l", col="blue", ylab="" )
length(z$Survived)
length(x1)
x<-1:length(z$Survived)
x1<-z$Class2nd
x2<-z$Class3rd
x3<-z$ClassCrew
x4<-z$sexFemale
x5<-z$AgeAdult
head(z)
summary(z)
head(titanic.data)
summary(titanic.data)
length(titanic.data)
titanic.data
#曲線の表示
x<-1:length(titanic.data$Survived)
x1<-titanic.data$Class2nd
x2<-titanic.data$Class3rd
x3<-titanic.data$ClassCrew
x4<-titanic.data$sexFemale
x5<-titanic.data$AgeAdult
#曲線の作成
y<- 0.6853-1.0181*x1-1.7778*x2-0.8577*x3+2.4201*x4-1.0615*x5
plot(x,titanic.data$Survived, type="l")
par( new=T )
plot( x, y, type="l", col="blue", ylab="" )
summary(titanic.logit)
#曲線の表示
x<-1:length(titanic.data$Survived)
x1<-titanic.data$Class2nd
x2<-titanic.data$Class3rd
x3<-titanic.data$ClassCrew
x4<-titanic.data$sexFemale
x5<-titanic.data$AgeAdult
#曲線の作成
y<- 0.6853-1.0181*x1-1.7778*x2-0.8577*x3+2.4201*x4-1.0615*x5
#plot(x,titanic.data$Survived, type="l")
par( new=T )
plot( x, y, type="l", col="blue", ylab="" )
summary(#曲線の表示
x<-1:length(titanic.data$Survived)
x1<-titanic.data$Class2nd
x2<-titanic.data$Class3rd
x3<-titanic.data$ClassCrew
x4<-titanic.data$sexFemale
x5<-titanic.data$AgeAdult
#曲線の作成
y<- 0.6853-1.0181*x1-1.7778*x2-0.8577*x3+2.4201*x4-1.0615*x5
#plot(x,titanic.data$Survived, type="l")
par( new=T )
plot( x, y, type="l", col="blue", ylab="" )
)
summary(#曲線の表示
x<-1:length(titanic.data$Survived)
x1<-titanic.data$Class2nd
x2<-titanic.data$Class3rd
x3<-titanic.data$ClassCrew
x4<-titanic.data$sexFemale
x5<-titanic.data$AgeAdult
#曲線の作成
y<- 0.6853-1.0181*x1-1.7778*x2-0.8577*x3+2.4201*x4-1.0615*x5
#plot(x,titanic.data$Survived, type="l")
par( new=T )
plot( x, y, type="l", col="blue", ylab="" )
)
summary(titanic.data)
summary(titanic.logit)
x1<-ifelse(titanic.data$Class2nd=="2nd",1,0)
#曲線の表示
x<-1:length(titanic.data$Survived)
x1<-ifelse(titanic.data$Class2nd=="2nd",1,0)
x2<-ifelse(titanic.data$Class3rd=="3rd",1,0)
x3<-ifelse(titanic.data$ClassCrew=="Crew",1,0)
x4<-titanic.data$sexFemale
x5<-titanic.data$AgeAdult
#曲線の作成
y<- 0.6853-1.0181*x1-1.7778*x2-0.8577*x3+2.4201*x4-1.0615*x5
#plot(x,titanic.data$Survived, type="l")
par( new=T )
plot( x, y, type="l", col="blue", ylab="" )
#曲線の表示
x<-1:length(titanic.data$Survived)
x1<-ifelse(titanic.data$Class=="2nd",1,0)
x2<-ifelse(titanic.data$Class=="3rd",1,0)
x3<-ifelse(titanic.data$Class="Crew",1,0)
x4<-titanic.data$sexFemale
x5<-titanic.data$AgeAdult
#曲線の作成
y<- 0.6853-1.0181*x1-1.7778*x2-0.8577*x3+2.4201*x4-1.0615*x5
#plot(x,titanic.data$Survived, type="l")
par( new=T )
plot( x, y, type="l", col="blue", ylab="" )
#曲線の表示
x<-1:length(titanic.data$Survived)
x1<-ifelse(titanic.data$Class=="2nd",1,0)
x2<-ifelse(titanic.data$Class=="3rd",1,0)
x3<-ifelse(titanic.data$Class=="Crew",1,0)
x4<-titanic.data$sexFemale
x5<-titanic.data$AgeAdult
length(x)
length(x1)
length(x2)
length(x4)
summary(titanic.data)
#曲線の表示
x<-1:length(titanic.data$Survived)
x1<-ifelse(titanic.data$Class=="2nd",1,0)
x2<-ifelse(titanic.data$Class=="3rd",1,0)
x3<-ifelse(titanic.data$Class=="Crew",1,0)
x4<-titanic.data$sex
x5<-titanic.data$Age
#曲線の作成
y<- 0.6853-1.0181*x1-1.7778*x2-0.8577*x3+2.4201*x4-1.0615*x5
#plot(x,titanic.data$Survived, type="l")
par( new=T )
plot( x, y, type="l", col="blue", ylab="" )
summary(titanic.logit)
#曲線の表示
x<-1:length(titanic.data$Survived)
x1<-ifelse(titanic.data$Class=="2nd",1,0)
x2<-ifelse(titanic.data$Class=="3rd",1,0)
x3<-ifelse(titanic.data$Class=="Crew",1,0)
x4<-ifelse(titanic.data$sex=="Female",1,0)
x5<-ifelse(titanic.data$Age=="Adult",1,0)
#曲線の作成
y<- 0.6853-1.0181*x1-1.7778*x2-0.8577*x3+2.4201*x4-1.0615*x5
#plot(x,titanic.data$Survived, type="l")
par( new=T )
plot( x, y, type="l", col="blue", ylab="" )
q()
source("C:\\Users\\FMV\\Google Drive\\software\\R\\project\\DataScientistBook\\riterasi.R")
source("C:\\Users\\FMV\\Google Drive\\software\\R\\project\\DataScientistBook\\riterasi.R")
save.image("C:\\Users\\FMV\\Google Drive\\software\\R\\project\\DataScientistBook\\.RData")
library(rpart)
library(partykit)
install.packages(partykit)
install.packages("partykit")
titanic.rp <- rpart(Survived~.,data=titanic.data)
plot(as.party(titanic.rp),tp_args=T)
library(partykit)
plot(as.party(titanic.rp),tp_args=T)
]
head(state.x77)
summary(state.x77)
state.x77
state.pca <- procomp(state.x77[,1:6],scale=T)
state.pca <- prcomp(state.x77[,1:6],scale=T)
biplot(state.pca)
state.km <- kmeans(scale(state.x77[,1:6],3))
state.km <- kmeans(scale(state.x77[,1:6]),3)
state.pca.df <- data.frame(state.pca$x)
state.pca.df$name <- rownames(state.pca.df)
state.pca.df$cluster <- as.factor(state.km$cluster)
ggplot(state.pca.df,aes(x=PC1,y=PC2,label=name,col=cluster))+
geom_text()+
theme_bw(16)
############# k-means法による非階層クラスタリング
state.km <- kmeans(scale(state.x77[,1:6]),4)
#主成分分析の結果にクラスターの情報を付加する
state.pca.df <- data.frame(state.pca$x)
state.pca.df$name <- rownames(state.pca.df)
state.pca.df$cluster <- as.factor(state.km$cluster)
#描画
ggplot(state.pca.df,aes(x=PC1,y=PC2,label=name,col=cluster))+
geom_text()+
theme_bw(16)
############# k-means法による非階層クラスタリング
state.km <- kmeans(scale(state.x77[,1:6]),3)
#主成分分析の結果にクラスターの情報を付加する
state.pca.df <- data.frame(state.pca$x)
state.pca.df$name <- rownames(state.pca.df)
state.pca.df$cluster <- as.factor(state.km$cluster)
#描画
ggplot(state.pca.df,aes(x=PC1,y=PC2,label=name,col=cluster))+
geom_text()+
theme_bw(16)
summary(state.pca)
#############主成分分析
state.pca <- prcomp(state.x77[,1:6],scale=T)
summary(state.pca)
#表示
biplot(state.pca)
summary(state.km)
summary(state.pca$x)
############# k-means法による非階層クラスタリング
state.km <- kmeans(scale(state.x77[,1:6]),3)
#主成分分析の結果にクラスターの情報を付加する
state.pca.df <- data.frame(state.pca$x)
state.pca.df$name <- rownames(state.pca.df)
state.pca.df$cluster <- as.factor(state.km$cluster)
#描画
ggplot(state.pca.df,aes(x=PC1,y=PC2,label=name,col=cluster))+
geom_text()+
theme_bw(16)
install.packages("fmsb")
library(fmsb)
df <- as.data.frame(scale(state.km$centers))
legend("topright",legend=1:3,col=rainbow(3),lty=1)
dfmax <- apply(df,2,max)+1
dfmin <- apply(df,2,min)-1
df <- rbind(dfmax,dfmin,df)
legend("topright",legend=1:3,col=rainbow(3),lty=1)
#レーダーチャート用にデータを整形
df <- as.data.frame(scale(state.km$centers))
dfmax <- apply(df,2,max)+1
dfmin <- apply(df,2,min)-1
df <- rbind(dfmax,dfmin,df)
#レーダーチャートの描画
legend("topright",legend=1:3,col=rainbow(3),lty=1)
radarchart(df,seg=5,plty=1,pcol=rainbow(3))
legend("topright",legend=1:3,col=rainbow(3),lty=1)
q()
q()
